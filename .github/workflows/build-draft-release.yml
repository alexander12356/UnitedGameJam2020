# Использованные источники
# - Документация GitHub Actions: https://docs.github.com/en/actions/learn-github-actions/
# - Доступные окружения для Runner-ов GitHub Actions: https://github.com/actions/virtual-environments#available-environments
# - Action-ы для сборки проектов на Unity: https://game.ci/docs/github/getting-started
# - Справочник по аргументам Unity.exe: https://docs.unity3d.com/Manual/CommandLineArguments.html
# - Инструкцию по развертыванию CI/CD: https://habr.com/ru/company/jugru/blog/505994/
# - https://github.com/release-drafter/release-drafter
# - https://github.com/actions/download-artifact
# - https://github.com/actions/upload-artifact
# - https://github.com/actions/checkout

name: Build Draft Release
on:
  push:
    branches:
      - master
jobs:
  build-application:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          lfs: true

      # - uses: actions/cache@v2
      #   with:
      #     path: Library
      #     key: Library

      - uses: game-ci/unity-test-runner@v2.0-alpha-5
        env:
          # TODO: положить лицензию в secrets
          UNITY_LICENSE_FILE: ../licenses/Unity_v2019.x.ulf
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          unityVersion: 2019.3.11f1

      - uses: game-ci/unity-builder@v2.0-alpha-10
        env:
          # TODO: положить лицензию в secrets
          UNITY_LICENSE_FILE: ./licenses/Unity_v2019.x.ulf
        with:
          targetPlatform: StandaloneWindows64
          unityVersion: 2019.3.11f1
          buildsPath: Build

      - uses: actions/upload-artifact@v2
        with:
          name: Build
          path: Build

  create-draft:
    runs-on: ubuntu-latest
    needs: build-application
    steps:

      - uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          lfs: true

      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: actions/download-artifact@v2
        with:
          name: Build
          path: Build

      - name: zipping builded files
        run: |
          ls -la
          zip -r Build.zip Build

      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.release_drafter.outputs.upload_url }}
          asset_path: Build.zip
          asset_name: Build.zip
          asset_content_type: application/zip
